import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
from io import BytesIO

def calcular_amortizacao(valor_casa, entrada, taxa_juros_anual, prazo_anos, seguro_mensal=0.0, comissao_inicial=0.0):
    valor_financiado = valor_casa - entrada
    meses = prazo_anos * 12
    taxa_mensal = (taxa_juros_anual / 100) / 12

    prestacoes = []
    saldo = valor_financiado

    if taxa_mensal > 0:
        prestacao_base = valor_financiado * (taxa_mensal * (1 + taxa_mensal) ** meses) / ((1 + taxa_mensal) ** meses - 1)
    else:
        prestacao_base = valor_financiado / meses

    for mes in range(1, meses + 1):
        juros_mes = saldo * taxa_mensal
        capital_mes = prestacao_base - juros_mes
        saldo -= capital_mes
        prestacoes.append({
            "M√™s": mes,
            "Ano": (mes - 1) // 12 + 1,
            "Presta√ß√£o (‚Ç¨)": prestacao_base,
            "Juros (‚Ç¨)": juros_mes,
            "Capital (‚Ç¨)": capital_mes,
            "Saldo Devedor (‚Ç¨)": saldo if saldo > 0 else 0
        })

    return pd.DataFrame(prestacoes), prestacao_base


# --- INTERFACE Streamlit ---
st.set_page_config(page_title="Simulador Cr√©dito Habita√ß√£o", layout="centered")
st.title("üè† Simulador de Cr√©dito Habita√ß√£o")

valor_casa = st.number_input("Valor da casa (‚Ç¨)", min_value=0.0, value=200000.0, step=1000.0)
entrada = st.number_input("Entrada inicial (‚Ç¨)", min_value=0.0, value=40000.0, step=1000.0)
taxa_juros_anual = st.number_input("Taxa de juro anual (%)", min_value=0.0, value=2.0, step=0.1)
prazo_anos = st.slider("Prazo do empr√©stimo (anos)", 5, 40, 30)
seguro_mensal = st.number_input("Seguro mensal (‚Ç¨)", min_value=0.0, value=30.0)
comissao_inicial = st.number_input("Comiss√£o inicial (‚Ç¨)", min_value=0.0, value=1000.0)

if st.button("Simular"):
    df, prestacao_base = calcular_amortizacao(valor_casa, entrada, taxa_juros_anual, prazo_anos, seguro_mensal, comissao_inicial)

    juros_total = df["Juros (‚Ç¨)"].sum()
    capital_total = df["Capital (‚Ç¨)"].sum()
    total_pago = capital_total + juros_total + (seguro_mensal * prazo_anos * 12) + comissao_inicial

    st.subheader("üìä Resumo")
    st.write(f"**Montante financiado:** ‚Ç¨{valor_casa - entrada:,.2f}")
    st.write(f"**Presta√ß√£o mensal base:** ‚Ç¨{prestacao_base:,.2f}")
    st.write(f"**Total pago (com seguro e comiss√£o):** ‚Ç¨{total_pago:,.2f}")

    # Tabela mensal
    st.subheader("üìÖ Breakdown Mensal")
    st.dataframe(df.style.format({"Presta√ß√£o (‚Ç¨)": "‚Ç¨{:.2f}", "Juros (‚Ç¨)": "‚Ç¨{:.2f}", "Capital (‚Ç¨)": "‚Ç¨{:.2f}", "Saldo Devedor (‚Ç¨)": "‚Ç¨{:.2f}"}), use_container_width=True)

    # Totais por ano
    st.subheader("üìÜ Resumo Anual")
    resumo_anual = df.groupby("Ano")[["Juros (‚Ç¨)", "Capital (‚Ç¨)"]].sum().reset_index()
    resumo_anual["Total (‚Ç¨)"] = resumo_anual["Juros (‚Ç¨)"] + resumo_anual["Capital (‚Ç¨)"]
    st.dataframe(resumo_anual.style.format("‚Ç¨{:.2f}"), use_container_width=True)

    # Gr√°fico
    st.subheader("üìà Gr√°fico: Juros vs Capital")
    fig, ax = plt.subplots(figsize=(10, 4))
    ax.plot(df["M√™s"], df["Juros (‚Ç¨)"], label="Juros", color="red")
    ax.plot(df["M√™s"], df["Capital (‚Ç¨)"], label="Capital", color="green")
    ax.set_title("Evolu√ß√£o da Presta√ß√£o")
    ax.set_xlabel("M√™s")
    ax.set_ylabel("Valor (‚Ç¨)")
    ax.legend()
    ax.grid(True)
    st.pyplot(fig)

    # EXPORTA√á√ÉO PARA EXCEL - coloca isto DENTRO do bloco do bot√£o
    from io import BytesIO

    st.subheader("üì§ Exportar simula√ß√£o para Excel")

    output = BytesIO()
    with pd.ExcelWriter(output, engine='xlsxwriter') as writer:
        df.to_excel(writer, sheet_name='Mensal', index=False)
        resumo_anual.to_excel(writer, sheet_name='Resumo Anual', index=False)

        workbook = writer.book
        format_currency = workbook.add_format({'num_format': '‚Ç¨#,##0.00'})

        for sheet in ['Mensal', 'Resumo Anual']:
            worksheet = writer.sheets[sheet]
            worksheet.set_column('A:Z', 18, format_currency)

    output.seek(0)
    st.download_button(
        label="üì• Baixar Excel com Simula√ß√£o",
        data=output,
        file_name='simulador_credito_habitacao.xlsx',
        mime='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
    )
